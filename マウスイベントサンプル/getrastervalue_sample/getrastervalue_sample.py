# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GetRasterValueSample
                                 A QGIS plugin
 マウスカーソル下のラスタの値をツールチップで表示します
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2020-01-25
        git sha              : $Format:%H$
        copyright            : (C) 2020 by Chiakikun
        email                : chiakikungm@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from qgis.PyQt.QtCore import QSettings, QTimer
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction, QToolTip

# Initialize Qt resources from file resources.py
from .resources import *
import os.path

import qgis.core;

class GetRasterValueSample:

    def __init__(self, iface):

        # Save reference to the QGIS interface
        self.iface = iface
        self.canvas = self.iface.mapCanvas()
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)

        # プラグインの登録場所
        self.menu_pos = 'サンプル マウスイベント'
        # キャンバスウィンドウ上でのマウスイベントの設定
        self.mouseEventSample = MouseEventSample(self.iface, self.canvas)
        # このサンプル以外のアイコンを押した場合の設定
        self.canvas.mapToolSet.connect(self.unsetTool)


    def initGui(self):
        icon = QIcon(self.plugin_dir+'/icon.png')
        self.action = QAction(icon, 'ツールチップサンプル', self.iface.mainWindow())
        self.action.triggered.connect(self.execSample) # アイコンを押下した時に実行されるメソッドを登録
        self.action.setCheckable(True)                 # Trueだとアイコンを押下したら次に押下するまで凹んだままになる。
        #self.iface.addToolBarIcon(self.action)         # ツールバーにアイコンを表示させたいなら#外して
        self.iface.addPluginToMenu(self.menu_pos, self.action)
        

    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        self.iface.removePluginMenu(self.menu_pos, self.action)
        self.iface.removeToolBarIcon(self.action)


    # このサンプル以外のアイコンが押された場合、アイコンを元の状態に戻す
    def unsetTool(self, tool):
        if not isinstance(tool, MouseEventSample):
            self.action.setChecked(False)


    def execSample(self):
        if self.action.isChecked():
            self.previousMapTool = self.canvas.mapTool()
            self.canvas.setMapTool(self.mouseEventSample)
        else:
            self.canvas.unsetMapTool(self.mouseEventSample)
            self.canvas.setMapTool(self.previousMapTool)
            self.action.setChecked(False)


class MouseEventSample(qgis.gui.QgsMapTool):
    def __init__(self, iface, canvas):
        qgis.gui.QgsMapTool.__init__(self, canvas)

        self.canvas = canvas
        self.iface = iface

        # canvasMoveEventで設定した秒数（このプログラムでは700ms）経過したら呼ばれるメソッドを設定
        self.timerMapTips = QTimer( canvas )
        self.timerMapTips.timeout.connect( self.showMapTip )


    def canvasMoveEvent(self, event):
        QToolTip.hideText()
        self.timerMapTips.start( 700 )


    def showMapTip( self ):
        self.timerMapTips.stop()

        rLayer = self.iface.activeLayer()
        if type(rLayer) is qgis.core.QgsRasterLayer:
            # マウスカーソル下のピクセル値を取得する
            mappos = self.toMapCoordinates(self.canvas.mouseLastXY())
            ident = rLayer.dataProvider().identify( mappos, qgis.core.QgsRaster.IdentifyFormatValue ) # 参考: https://qgis.org/api/qgsraster_8h_source.html#l00057

            # ツールチップに表示する文字列を設定する
            if ident.isValid():
                values = ident.results().values()
                text = ", ".join(['{0:g}'.format(r) for r in values if r is not None] ) # 複数取得することは無いだろうけど一応
            else:
                text = "Non valid value"

            QToolTip.showText( self.canvas.mapToGlobal( self.canvas.mouseLastXY() ), text, self.canvas )
