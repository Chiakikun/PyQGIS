# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AddFeatureSampleDialog
                                 A QGIS plugin
 AddFeatureのSampleです
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2019-11-23
        git sha              : $Format:%H$
        copyright            : (C) 2019 by Chiakikun
        email                : chiakikungm@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from qgis.PyQt import QtCore, QtGui
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

from qgis.PyQt.QtGui import QColor
import os
import qgis.core
from datetime import datetime
import getpass

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'initDialog.ui'))


class initDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, iface, parent=None):
        super(initDialog, self).__init__(parent)
        self.setupUi(self)

        self.canvas = iface.mapCanvas()

        layers = qgis.core.QgsProject.instance().mapLayers().values()
        for layer in layers:
            if type(layer) is not qgis.core.QgsVectorLayer: continue
            self.comboSelectLayer.addItem(layer.name())

        self.lineUserName.setText(getpass.getuser())


    def showEvent(self, e):
        self.userName = ''
        self.objType = ''
        self.layerName = ''


    def pushExec(self):
        self.userName = self.lineUserName.text()
        self.layerName = self.comboSelectLayer.currentText()
        self.close()

