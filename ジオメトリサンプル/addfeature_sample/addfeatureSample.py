# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AddFeatureSample
                                 A QGIS plugin
 AddFeatureのSampleです
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-11-23
        git sha              : $Format:%H$
        copyright            : (C) 2019 by Chiakikun
        email                : chiakikungm@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from qgis.PyQt.QtCore import QSettings, QPoint, Qt
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction, QMessageBox

# Initialize Qt resources from file resources.py
from .resources import *
# Import the code for the dialog
from .addfeatureSample_dialog import AddFeatureSampleDialog
from .initdialog import initDialog
import os.path


class AddFeatureSample:

    def __init__(self, iface):

        # Save reference to the QGIS interface
        self.iface = iface
        self.canvas = self.iface.mapCanvas()
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)

        # プラグインの登録場所
        self.menu_pos = 'サンプル マウスイベント'

        # Check if plugin was started the first time in current QGIS session
        # Must be set in initGui() to survive plugin reloads
        self.first_start = None


    def initGui(self):
        icon = QIcon(self.plugin_dir+'/icon.png')
        self.action = QAction(icon, 'ラバーバンドサンプル', self.iface.mainWindow())
        self.action.triggered.connect(self.run) # アイコンを押下した時に実行されるメソッドを登録
        #self.iface.addToolBarIcon(self.action) # ツールバーにアイコンを表示させたいなら#外して
        self.iface.addPluginToMenu(self.menu_pos, self.action)

        # will be set False in run()
        self.first_start = True


    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        self.iface.removePluginMenu(self.menu_pos, self.action)
        self.iface.removeToolBarIcon(self.action)


    def run(self):
        """Run method that performs all the real work"""

        # 設定ダイアログ
        self.initDialog = initDialog(self.iface, self.iface.mainWindow())
        self.initDialog.show()

        result = self.initDialog.exec_()
        if result:
            layerName = self.initDialog.layerName
            userName = self.initDialog.userName

            if layerName == '':
                QMessageBox.about(self.iface.mainWindow(), "警告", "編集するレイヤ名を入力してください")
                return

            # プラグイン実行
            pos = self.canvas.mapToGlobal(QPoint( 0, 0 ))
            self.dlg = AddFeatureSampleDialog(self.iface, layerName, userName, self.iface.mainWindow())
            self.dlg.move(pos.x(), pos.y())
            self.dlg.show()